{"version":3,"sources":["components/navbar/index.js","components/home/LoginForm/index.js","components/home/SignupForm/index.js","components/home/index.js","components/profile/index.js","components/stage/index.js","components/teamselection/riderform/index.js","components/teamselection/userselectiontable/index.js","components/teamselection/index.js","components/admin/index.js","components/etappewinsten/index.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","buttonSignProfile","this","props","isLoggedIn","react_default","a","createElement","Link","to","className","Component","LoginForm","action","onSubmit","loginSubmit","name","ref","type","placeholder","SignupForm","signupSubmit","Home","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","e","preventDefault","email","target","value","password","axios","post","then","res","data","history","push","catch","error","formButton","state","Signup","setState","bind","assertThisInitialized","form","classNameSignup","classNameLogin","home_SignupForm","home_LoginForm","id","onClick","ActiveRacesTable","Profile","window","alert","console","log","profile_ActiveRacesTable","ResultsTableRow","firstname","lastname","team","stagescore","teamscore","totalscore","PouleTableRow","username","ResultsTable","rows","userTeamResult","forEach","rider","stage_ResultsTableRow","PouleTable","userScores","user","stage_PouleTableRow","Stage","mode","race","year","stage","match","params","stagenumber","previousStage","nextStage","_this2","stageNumber","teamresult","userscores","currentstage","parseInt","toString","updateData","message","resTable","pTable","stage_ResultsTable","stage_PouleTable","RiderForm","fetchRider","errorClass","errorText","Deselectionbutton","removeRider","riderID","selected","UserRiderrow","price","userselectiontable_Deselectionbutton","Userselectiontable","_this3","selection","map","_ref","rider_participation_id","userselectiontable_UserRiderrow","key","Finances","budget","teamsize","Ridercard","src","imageURL","alt","onChange","changePrice","firstName","lastName","age","countryFullname","buttonClass","selectRider","buttonText","Teamselection","pcsid","split","pop","userSelection","country","unshift","rider_id","i","length","splice","_this4","riders","allRiders","riderform","teamselection_Ridercard","teamselection_Finances","userselectiontable","Outputtable","output","header","row","keys","property","Admin","submitQuery","query","handleChange","testButton","cols","admin_Outputtable","EtappeRankingsTable","stagerankings","EtappeRankingsTableTotal","rankingscount","etappewinsten","race_id","poule_id","rankings","etappewinsten_EtappeRankingsTable","etappewinsten_EtappeRankingsTableTotal","App","withCredentials","location","pathname","replace","components_navbar","Route","exact","path","render","Redirect","components_home","component","Etappewinsten","Boolean","hostname","createHistory","ReactDOM","Router","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c66f2059.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './index.css';\r\n\r\nclass Navbar extends Component {\r\n    render() {\r\n        let buttonLog;\r\n        let buttonSignProfile;\r\n        if (this.props.isLoggedIn) {\r\n            buttonSignProfile = <li><Link to=\"/profile\">Profile</Link></li>;\r\n            buttonLog = <li><Link to=\"/logout\">Logout</Link></li>;\r\n        } else {\r\n            buttonSignProfile = <li><Link to=\"/signup\">Signup</Link></li>;\r\n            buttonLog = <li><Link to=\"/login\">Login</Link></li>;\r\n        }\r\n        return (\r\n            <div className=\"navbar\">\r\n                <ul>\r\n                    {buttonSignProfile}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Navbar","import React, { Component } from 'react';\r\n\r\nclass LoginForm extends Component {\r\n    render(){\r\n        return (\r\n            <form action=\"\" onSubmit={this.props.loginSubmit}>\r\n                <div className=\"inputContainer\">\r\n                    <input className=\"form-control\" name=\"email\" ref=\"email\" type=\"email\" placeholder=\"Email Address\"/>\r\n                </div>\r\n                <div className=\"inputContainer\">\r\n                    <input className=\"form-control\" name=\"password\" ref=\"password\" type=\"password\" placeholder=\"Password\"/>\r\n                </div>\r\n                <div className=\"formButtonContainer\">\r\n                    <button className=\"loginButton\">Sign in</button>\r\n                </div>\r\n            </form>\r\n        );\r\n    };\r\n}\r\n\r\nexport default LoginForm","import React, { Component } from 'react';\r\n\r\nclass SignupForm extends Component {\r\n    render() {\r\n        return (\r\n            <form action=\"\" onSubmit={this.props.signupSubmit}>\r\n                <div className=\"inputContainer\">\r\n                    <input className=\"form-control\" name=\"email\" ref=\"email\" type=\"email\" placeholder=\"Email Address\"/>\r\n                </div>\r\n                <div className=\"inputContainer\">\r\n                    <input className=\"form-control\" name=\"username\" ref=\"username\" type=\"username\" placeholder=\"Username\"/>\r\n                </div>\r\n                <div className=\"inputContainer\">\r\n                    <input className=\"form-control\" name=\"password\" ref=\"password\" type=\"password\" placeholder=\"Password\"/>\r\n                </div>\r\n                <div className=\"formButtonContainer\">\r\n                    <button className=\"loginButton\">Sign up</button>\r\n                </div>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SignupForm;","import React, { Component } from 'react';\r\nimport './index.css';\r\nimport axios from 'axios';\r\n\r\nimport LoginForm from './LoginForm/'\r\nimport SignupForm from './SignupForm/'\r\n\r\nclass Home extends Component{\r\n    constructor(props){\r\n      super(props);\r\n      this.state = ({Signup: false});\r\n      this.loginSubmit = this.loginSubmit.bind(this);\r\n      this.signupSubmit = this.signupSubmit.bind(this);\r\n      this.formButton = this.formButton.bind(this);\r\n    }\r\n    loginSubmit = (e) => {\r\n        e.preventDefault();\r\n        const email = e.target.email.value;\r\n        const password = e.target.password.value;\r\n        axios.post('api/login',{email: email,password: password}) //Stuur de form naar de server\r\n        .then((res) => {\r\n            if(res.data){\r\n                this.props.history.push('/stage/1');\r\n            }else{\r\n\r\n            }\r\n        })\r\n        .catch(function (error) {\r\n            throw error\r\n        });\r\n    }\r\n    signupSubmit = (e) => {\r\n        e.preventDefault();\r\n        axios.post('api/signup')\r\n        .then((res) => {\r\n            if(res.data){\r\n                this.props.history.push('/stage/1')\r\n            }else{\r\n\r\n            }\r\n        })\r\n    }\r\n    formButton = () => {\r\n        if(this.state.Signup){\r\n            this.setState({Signup: false});\r\n        }else{\r\n            this.setState({Signup: true});\r\n        }\r\n    }\r\n    render() {\r\n        var classNameSignup = \"formTab\"\r\n        var classNameLogin = \"formTab active\"\r\n        let form;\r\n        if (this.state.Signup) {\r\n            form = <SignupForm signupSubmit={this.signupSubmit} />\r\n            classNameSignup = \"formTab active\"\r\n            classNameLogin = \"formTab\"\r\n        }else{\r\n            form = <LoginForm loginSubmit={this.loginSubmit} />\r\n            classNameSignup = \"formTab\"\r\n            classNameLogin = \"formTab active\"\r\n        }\r\n        return(\r\n            <div className=\"homepageContainer\">\r\n                <button id=\"logintabButton\" className={classNameLogin} onClick={this.formButton}>Sign in</button>\r\n                <button id=\"signuptabButton\" className={classNameSignup} onClick={this.formButton}>Sign up</button>\r\n                <div className=\"formsAndMore\">\r\n                    {form}\r\n                </div>\r\n                <div>\r\n                    \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n//import './index.css';\r\n\r\nclass ActiveRacesTable extends Component{\r\n    render(){\r\n        return(\r\n            <div>LOL</div>\r\n        )\r\n    }\r\n}\r\n\r\nclass Profile extends Component{\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n    componentDidMount() {\r\n        window.alert('Mounted')\r\n        axios.post('/api/getracepartcipation') //to: userparticipation.js\r\n        .then((res)=>{\r\n            console.log(res)\r\n        })\r\n    }\r\n    \r\n    render(){\r\n        return(\r\n            <div className=\"standardContainer\">\r\n                <div className=\"activeRaces\">\r\n                    <ActiveRacesTable/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Profile","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport './index.css';\r\n\r\nclass ResultsTableRow extends Component{\r\n    render(){\r\n        return(\r\n            <tr>\r\n                <td>{this.props.firstname} {this.props.lastname}</td>\r\n                <td>{this.props.team}</td>\r\n                <td>{this.props.stagescore}</td>\r\n                <td>{this.props.teamscore}</td>\r\n                <td>{this.props.totalscore}</td>\r\n            </tr>\r\n        )\r\n    }\r\n}\r\n\r\nclass PouleTableRow extends Component{\r\n    render(){\r\n        return(\r\n            <tr>\r\n                <td>{this.props.username}</td>\r\n                <td>{this.props.stagescore}</td>\r\n                <td>{this.props.totalscore}</td>\r\n            </tr>\r\n        )\r\n    }\r\n}\r\n\r\nclass ResultsTable extends Component{\r\n    render(){\r\n        const rows = [];\r\n        const userTeam = this.props.userTeamResult\r\n        userTeam.forEach(rider => {\r\n            rows.push(\r\n                <ResultsTableRow\r\n                    firstname={rider.firstname}\r\n                    lastname={rider.lastname}\r\n                    team={rider.team}\r\n                    stagescore={rider.stagescore}\r\n                    teamscore={rider.teamscore}\r\n                    totalscore={rider.totalscore}\r\n                />\r\n            )\r\n        });\r\n        \r\n        return(\r\n            <table className=\"scoreTable\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Name</th>\r\n                        <th>Team</th>\r\n                        <th>StageScore</th>\r\n                        <th>TeamScore</th>\r\n                        <th>Total</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {rows}\r\n                </tbody>\r\n            </table>\r\n        )\r\n    }\r\n}\r\n\r\nclass PouleTable extends Component{\r\n    render(){\r\n        const rows = [];\r\n        const userScores = this.props.userScores\r\n        userScores.forEach(user => {\r\n            rows.push(\r\n                <PouleTableRow\r\n                    username={user.username}\r\n                    stagescore={user.stagescore}\r\n                    totalscore={user.totalscore}\r\n                />\r\n            )\r\n        });\r\n        \r\n        return(\r\n            <table className=\"pouleTable\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Username</th>\r\n                        <th>Stagescore</th>\r\n                        <th>Totalscore</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {rows}\r\n                </tbody>\r\n            </table>\r\n        )\r\n    }\r\n}    \r\n\r\nclass Stage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            mode: '', \r\n            race: 'classics',\r\n            year: '2019',\r\n            stage: this.props.match.params.stagenumber, //Haal het nummer uit de link\r\n            userTeamResult: [],\r\n            userScores: []\r\n        }\r\n        this.previousStage = this.previousStage.bind(this);\r\n        this.nextStage = this.nextStage.bind(this);\r\n    }\r\n    updateData(stage){\r\n        const race = this.state.race\r\n        const year = this.state.year\r\n        console.log(stage)\r\n        axios.post('/api/getstageresultsclassics', { race: race, year: year, stageNumber: stage }) //to: stageresults.js\r\n            .then((res) => {\r\n                if(res.data.mode==='404'){\r\n                    this.setState({\r\n                        mode: '404'\r\n                    })\r\n                }else{\r\n                    this.setState({\r\n                        mode:'',\r\n                        userTeamResult: res.data.teamresult,\r\n                        userScores: res.data.userscores\r\n                    })\r\n                }\r\n            })\r\n    }\r\n    previousStage(){\r\n        const currentstage = this.state.stage\r\n        this.props.history.push('/stage/'+(parseInt(currentstage)-1).toString())\r\n        this.setState({\r\n            stage:(parseInt(currentstage)-1).toString()\r\n        })\r\n        this.updateData((parseInt(currentstage)-1).toString())\r\n    }\r\n    nextStage(){\r\n        const currentstage = this.state.stage\r\n        this.props.history.push('/stage/'+(parseInt(currentstage)+1).toString())\r\n        this.setState({\r\n            stage:(parseInt(currentstage)+1).toString()\r\n        })\r\n        this.updateData((parseInt(currentstage)+1).toString())\r\n    }\r\n    componentDidMount() {\r\n        this.updateData(this.state.stage)\r\n    }\r\n\r\n    render() {\r\n        const mode = this.state.mode\r\n        let message\r\n        let resTable\r\n        let pTable\r\n        if(mode === '404'){\r\n            message=<h3>404: Data not found</h3>\r\n            resTable=''\r\n            pTable=''\r\n        }else{\r\n            message=<h3></h3>\r\n            resTable=<ResultsTable userTeamResult={this.state.userTeamResult}/>\r\n            pTable=<PouleTable userScores={this.state.userScores}/>\r\n        }\r\n        return (\r\n            <div className=\"standardContainer\">\r\n                <button id=\"previousStageButton\" onClick={this.previousStage}>Previous Stage</button>\r\n                <button id=\"nextStageButton\" onClick={this.nextStage}>Next Stage</button>\r\n                {message}\r\n                {resTable}\r\n                {pTable}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Stage","import React, { Component } from 'react';\r\n\r\nclass RiderForm extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"classicsSelectionFormContainer\">\r\n                <form action=\"\" onSubmit={this.props.fetchRider}>\r\n                    <div className=\"pcsForm\">\r\n                        <input className=\"riderFormTextbox\" name=\"pcsid\" ref=\"pcsid\" placeholder=\"Enter PCS ID\" />\r\n                        <button className=\"riderSubmitButton\">Find ▶</button>\r\n                    </div>\r\n                </form>\r\n                <div className={this.props.errorClass}>{this.props.errorText}</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RiderForm","import React, { Component } from 'react';\r\n\r\nclass Deselectionbutton extends Component{\r\n    removeRider=()=> {\r\n        this.props.removeRider(this.props.riderID);\r\n    }\r\n    render(){\r\n        return(\r\n            <button className={this.props.selected} onClick={() => this.removeRider(this.props.riderID)}>Remove Rider</button>\r\n        )\r\n    }\r\n}\r\n\r\nclass UserRiderrow extends Component{\r\n    render(){\r\n        const rider = this.props\r\n        return(\r\n            <tr>\r\n                <td>{rider.firstname} {rider.lastname}</td>\r\n                <td>{rider.team}</td>\r\n                <td>{rider.price}</td>\r\n                <td><Deselectionbutton removeRider={this.props.removeRider} riderID={this.props.riderID}/></td>\r\n            </tr>\r\n        )\r\n    }\r\n}\r\nclass Userselectiontable extends Component{\r\n    render(){\r\n        const rows = [];\r\n        console.log(this.props.selection)\r\n        this.props.selection.map(({firstname,lastname,team,price,rider_participation_id})=>{\r\n            rows.push(\r\n                <UserRiderrow firstname={firstname} lastname={lastname} team={team} price={price} key={rider_participation_id} riderID={rider_participation_id} removeRider={this.props.removeRider}/>\r\n            )\r\n        });\r\n        return(\r\n            <table className=\"userTeam\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Name</th>\r\n                        <th>Team</th>\r\n                        <th>Price</th>\r\n                        <th></th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>{rows}</tbody>\r\n            </table>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Userselectiontable","import React, { Component } from 'react';\r\nimport RiderForm from './riderform'\r\nimport Userselectiontable from './userselectiontable'\r\nimport axios from 'axios';\r\nimport './index.css';\r\n\r\nclass Finances extends Component {\r\n    render() {\r\n        return (\r\n            <table className='finances'>\r\n                <thead>\r\n                    <tr><td>Finances</td><td></td></tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr><td>Budget</td><td>: €{this.props.budget}</td></tr>\r\n                    <tr><td>Riders to pick</td><td>: {20 - this.props.teamsize}</td></tr>\r\n                    <tr><td>Average</td><td>: €{this.props.budget / (20 - this.props.teamsize)}</td></tr>\r\n                </tbody>\r\n            </table>\r\n        )\r\n    }\r\n}\r\nclass Ridercard extends Component {\r\n    render() {\r\n        return (\r\n            <div className='ridercard'>\r\n                <img src={this.props.rider.imageURL} className='riderImage' alt='riderimage'></img>\r\n                <select className=\"riderPrice\" onChange={this.props.changePrice}>\r\n                    <option value=\"500000\">500,000</option>\r\n                    <option value=\"750000\">750,000</option>\r\n                    <option value=\"1000000\">1,000,000</option>\r\n                    <option value=\"1500000\">1,500,000</option>\r\n                    <option value=\"2000000\">2,000,000</option>\r\n                    <option value=\"2500000\">2,500,000</option>\r\n                    <option value=\"3000000\">3,000,000</option>\r\n                    <option value=\"3500000\">3,500,000</option>\r\n                    <option value=\"4000000\">4,000,000</option>\r\n                    <option value=\"5000000\">5,000,000</option>\r\n                    <option value=\"6000000\">6,000,000</option>\r\n                </select>\r\n                <ul>\r\n                    <li>Name: {this.props.rider.firstName} {this.props.rider.lastName}</li>\r\n                    <li>Age: {this.props.rider.age}</li>\r\n                    <li>Team: {this.props.rider.team}</li>\r\n                    <li>Country: {this.props.rider.countryFullname}</li>\r\n                </ul>\r\n                <button className={this.props.buttonClass} onClick={this.props.selectRider}>{this.props.buttonText}</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nclass Teamselection extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            userSelection: [{\r\n                firstname: '',\r\n                lastname: '',\r\n                price: 0,\r\n                team: '',\r\n                rider_participation_id: ''\r\n            }],\r\n            race: 'classics',\r\n            year: '2019',\r\n            budget: 0,\r\n            rider: {\r\n                firstName: '',\r\n                lastName: '',\r\n                team: '',\r\n                age: '',\r\n                country: '',\r\n                imageURL: '/images/blankProfilePicture.png',\r\n                pcsid: '',\r\n                countryFullname: '',\r\n            },\r\n            price: 500000,\r\n            buttonClass: 'riderSelectButton',\r\n            buttonText: 'Nothing to add',\r\n            errorClass: '',\r\n            errorText: ''\r\n        }\r\n        this.fetchRider = this.fetchRider.bind(this);\r\n        this.selectRider = this.selectRider.bind(this);\r\n        this.removeRider = this.removeRider.bind(this);\r\n        this.changePrice = this.changePrice.bind(this);\r\n    }\r\n    fetchRider = (e) => {\r\n        e.preventDefault();\r\n        const pcsid = e.target.pcsid.value.split('/').pop(); //Interpreteer de aanwezigheid van / als een link en pak het laatste stukje\r\n        this.setState({ buttonClass: 'riderSelectButton', buttonText: 'Fetching..' })\r\n        axios.post('/api/getrider', { pcsid: pcsid }) //to: SQLscrape.js\r\n            .then((res) => { //Returned false als niks gevonden\r\n                if (res.data === false) {\r\n                    this.setState({ \r\n                        errorClass: 'errorDiv', \r\n                        errorText: 'Rider could not be found', \r\n                        buttonText: 'Nothing to add'\r\n                    })\r\n                } else {\r\n                    this.setState({ \r\n                        rider: res.data.rider, \r\n                        buttonClass: 'riderSelectButton active',\r\n                        buttonText: 'Add rider to team',\r\n                        errorClass: '', \r\n                        errorText: ''\r\n                    });\r\n                }\r\n            });\r\n    }\r\n    selectRider() {\r\n        const rider = this.state.rider;\r\n        const race = this.state.race;\r\n        const year = this.state.year;\r\n        const price = this.state.price;\r\n        const pcsid = this.state.pcsid;\r\n        this.setState({ buttonClass: 'riderSelectButton', buttonText: 'Adding..' })\r\n        axios.post('/api/teamselectionaddclassics', { pcsid: pcsid, race: race, year: year, rider: rider, price: price }) //to: teamselection.js\r\n            .then((res) => {\r\n                if (res) {\r\n                    var userSelection = this.state.userSelection\r\n                    console.log(rider)\r\n                    userSelection.unshift({\r\n                        firstname: rider.firstName,\r\n                        lastname: rider.lastName,\r\n                        price: price,\r\n                        team: rider.team,\r\n                        rider_participation_id: res.riderID\r\n                    })\r\n                    console.log(userSelection)\r\n                    this.setState({\r\n                        userSelection: userSelection,\r\n                        budget: (this.state.budget-price), \r\n                        buttonClass: 'riderSelectButton active',\r\n                        buttonText: 'Add rider to team'\r\n                    })\r\n                }\r\n            })\r\n    }\r\n    removeRider(rider_id) {\r\n        const race = this.state.race;\r\n        const year = this.state.year;\r\n        this.setState({ buttonClass: 'riderSelectButton', buttonText: 'Removing..' })\r\n        axios.post('/api/teamselectionremove', {rider_participation_id: rider_id, race: race, year: year}) //to: teamselection.js\r\n            .then((res) => {\r\n                if(res){\r\n                    var userSelection = this.state.userSelection\r\n                    for(var i=0;i<userSelection.length;i++){\r\n                        if(userSelection[i].rider_participation_id === rider_id){\r\n                            userSelection.splice(i);\r\n                        }\r\n                    }\r\n                    this.setState({\r\n                        userSelection: userSelection,\r\n                        buttonClass: 'riderSelectButton active',\r\n                        buttonText: 'Add rider to team'\r\n                    })\r\n                }\r\n            })\r\n    }\r\n    componentDidMount() {\r\n        const race = this.state.race\r\n        const year = this.state.year\r\n        axios.post('/api/getuserteamselection', { race: race, year: year }) //to: teamselection.js\r\n            .then((res) => {\r\n                this.setState({\r\n                    riders: res.data.allRiders,\r\n                    userSelection: res.data.userSelection,\r\n                    budget: res.data.budget\r\n                })\r\n            })\r\n    }\r\n    changePrice(e) {\r\n        this.setState({\r\n            price : e.target.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const budget = this.state.budget\r\n        const teamsize = this.state.userSelection.length\r\n        const buttonClass = this.state.buttonClass\r\n        const buttonText = this.state.buttonText\r\n        return (\r\n            <div className=\"teamselectionContainer\">\r\n                <div className=\"riderformcontainer\">\r\n                    <RiderForm fetchRider={this.fetchRider} errorClass={this.state.errorClass} errorText={this.state.errorText}/>\r\n                    <Ridercard \r\n                        rider={this.state.rider} \r\n                        selectRider={this.selectRider} \r\n                        buttonClass={buttonClass} \r\n                        buttonText={buttonText} \r\n                        changePrice={this.changePrice}\r\n                    />\r\n                    <Finances teamsize={teamsize} budget={budget} />\r\n                </div>\r\n                <div className=\"usertablecontainer\">\r\n                    <Userselectiontable selection={this.state.userSelection} removeRider={this.removeRider} />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Teamselection","import React, { Component } from 'react';\r\nimport './index.css';\r\nimport axios from 'axios';\r\n\r\nclass Outputtable extends Component{\r\n    render(){\r\n        const output = this.props.output\r\n        const header = []\r\n        var row = []\r\n        const rows = []\r\n        if(output.length>0){\r\n            const properties = Object.keys(output[0])\r\n            properties.forEach(function(property){\r\n                header.push(<th>{property}</th>)\r\n            })\r\n            for(var i=0;i<output.length;i++){\r\n                for (var property in output[i]) {\r\n                    row.push(<td>{output[i][property]}</td>);\r\n                }\r\n                rows.push(<tr>{row}</tr>)\r\n                row = []\r\n            }\r\n        }\r\n        return(\r\n            <table className=\"outputTable\">\r\n                <thead>\r\n                    <tr>\r\n                        {header}\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {rows}\r\n                </tbody>\r\n            </table>\r\n        )\r\n    }\r\n}\r\n\r\nclass Admin extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = ({output: [],value: ''});\r\n        this.submitQuery = this.submitQuery.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.testButton = this.testButton.bind(this);\r\n    }\r\n    submitQuery = (e) => {\r\n        e.preventDefault();\r\n        axios.post('/api/admin',{query : this.state.value})\r\n        .then((res)=>{\r\n            this.setState({output:res.data.data})\r\n        })\r\n    }\r\n    handleChange(e){\r\n        this.setState({value: e.target.value});\r\n    }\r\n    testButton(e){\r\n        this.setState({value: e.target.value})\r\n    }\r\n    render(){\r\n        \r\n        return(\r\n            <div className=\"adminpageContainer\">\r\n                <div>\r\n                    <form action=\"\" onSubmit={this.submitQuery} id=\"queryform\">\r\n                        <textarea className=\"queryInputBox\" rows=\"12\" cols=\"80\" value={this.state.value} onChange={this.handleChange}/>\r\n                        <input type=\"submit\" value=\"submit\" />\r\n                    </form>\r\n                    <button onClick={this.testButton} value='SELECT * FROM account' className=\"queryButton\">Get all accounts</button>\r\n                    <button onClick={this.testButton} value=\"SELECT race_id FROM race WHERE name = '' AND year = ''\" className=\"queryButton\">Get race ID</button>\r\n                    <button onClick={this.testButton} value=\"SELECT rider.firstname || ' ' || rider.lastname as name, price, team, rider_participation_id FROM rider_participation INNER JOIN rider using(rider_id) WHERE race_id = ${race_id}\" className=\"queryButton\">Get all riders</button>\r\n                    <div className=\"outputTableContainer\">\r\n                        <Outputtable output={this.state.output}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }   \r\n}   \r\n\r\nexport default Admin","import React, { Component } from 'react';\r\nimport './index.css';\r\nimport axios from 'axios';\r\n\r\nclass EtappeRankingsTable extends Component{\r\n  render(){\r\n      const output = this.props.stagerankings\r\n      const header = []\r\n      var row = []\r\n      const rows = []\r\n      if(output.length>0){\r\n          const properties = Object.keys(output[0])\r\n          properties.forEach(function(property){\r\n              header.push(<th>{property}</th>)\r\n          })\r\n          for(var i=0;i<output.length;i++){\r\n              for (var property in output[i]) {\r\n                  row.push(<td>{output[i][property]}</td>);\r\n              }\r\n              rows.push(<tr>{row}</tr>)\r\n              row = []\r\n          }\r\n      }\r\n      return(\r\n          <table className=\"winnaarsTable\">\r\n              <thead>\r\n                  <tr>\r\n                      {header}\r\n                  </tr>\r\n              </thead>\r\n              <tbody>\r\n                  {rows}\r\n              </tbody>\r\n          </table>\r\n      )\r\n  }\r\n}\r\n\r\nclass EtappeRankingsTableTotal extends Component{\r\n  render(){\r\n      const output = this.props.rankingscount\r\n      const header = []\r\n      var row = []\r\n      const rows = []\r\n      if(output.length>0){\r\n          const properties = Object.keys(output[0])\r\n          properties.forEach(function(property){\r\n              header.push(<th>{property}</th>)\r\n          })\r\n          for(var i=0;i<output.length;i++){\r\n              for (var property in output[i]) {\r\n                  row.push(<td>{output[i][property]}</td>);\r\n              }\r\n              rows.push(<tr>{row}</tr>)\r\n              row = []\r\n          }\r\n      }\r\n      return(\r\n          <table className=\"winnaarsTable\">\r\n              <thead>\r\n                  <tr>\r\n                      {header}\r\n                  </tr>\r\n              </thead>\r\n              <tbody>\r\n                  {rows}\r\n              </tbody>\r\n          </table>\r\n      )\r\n  }\r\n}\r\n\r\n\r\n\r\nclass etappewinsten extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = ({stagerankings: [],rankingscount: []});\r\n  }\r\n\r\n  getStageResults() {\r\n    axios.post('/api/getstagevictories', { race_id: 4, poule_id: 0 })\r\n      .then((res) => {\r\n        if (res) {\r\n          this.state.rankings = [];\r\n          for (var i in res) {\r\n            this.state.rankings.push(res[i]);\r\n          }\r\n        }\r\n      })\r\n  }\r\n\r\n  componentWillMount() {\r\n    axios.post('/api/getstagevictories', { race_id: 4, poule_id: 0 })\r\n      .then((res) => {\r\n        if (res) {\r\n          console.log(\"DATA\",res.data);\r\n          this.setState({\r\n            stagerankings:  res.data.stagerankings,\r\n            rankingscount:  res.data.rankingscount\r\n          })\r\n          console.log(\"STATE:\",this.state)\r\n        }\r\n        \r\n      })\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"etappewinstenContainer\">\r\n        <div>Etappe Uitslagen</div>\r\n      <EtappeRankingsTable stagerankings={this.state.stagerankings} />\r\n      <div>Hoe vaak welke positie</div>\r\n      <EtappeRankingsTableTotal rankingscount={this.state.rankingscount} />\r\n      </div>\r\n\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default etappewinsten","import React, { Component } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport './index.css';\r\nimport axios from 'axios';\r\n\r\nimport Navbar from './components/navbar';\r\n\r\nimport Home from './components/home';\r\nimport Profile from './components/profile';\r\nimport Stage from './components/stage'\r\nimport Teamselection from './components/teamselection';\r\nimport Admin from './components/admin'\r\nimport Etappewinsten from './components/etappewinsten'\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = ({ isLoggedIn: false });\r\n  }\r\n\r\n  componentWillMount() {\r\n    //Voordat de pagina wordt geladen kijken of de gebruiker is ingelogd\r\n    axios.post('api/isloggedin', { withCredentials: true }) //to: authentication.js\r\n      .then((res) => {\r\n        if (this.state.isLoggedIn !== res.data) { //Als er verandering is moet de state worden aangepast\r\n          this.setState({ isLoggedIn: res.data }); //true of false\r\n        }\r\n        if (!this.state.isLoggedIn && this.props.history.location.pathname !== '/') { //Als er niet is ingelogd en de gebruiker is niet op de loginpagina -> redirect\r\n          this.props.history.replace('/');\r\n        }\r\n      })\r\n  }\r\n\r\n  render() {\r\n    //Kijk of de gebruiker is ingelogd bij elke update van de pagina\r\n    axios.post('api/isloggedin', { withCredentials: true }) //to: authentication.js\r\n      .then((res) => {\r\n        if (this.state.isLoggedIn !== res.data) { //Als er verandering is moet de state worden aangepast\r\n          this.setState({ isLoggedIn: res.data }); //true of false\r\n        }\r\n        if (!this.state.isLoggedIn && this.props.history.location.pathname !== '/') { //Als er niet is ingelogd en de gebruiker is niet op de loginpagina -> redirect\r\n          this.props.history.replace('/');\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        throw error\r\n      });\r\n    return (\r\n      <div className=\"content\">\r\n        <div className=\"backgroundImage\"></div>\r\n        <Navbar isLoggedIn={this.state.isLoggedIn} />\r\n        <div className=\"pageContainer\">\r\n          <Route exact path=\"/\" render={() => (\r\n            this.state.isLoggedIn ? (<Redirect to=\"/stage/1\" />) : (<Home history={this.props.history} />)\r\n          )} />\r\n          <Route path=\"/profile\" component={Profile} history={this.props.history} />\r\n          <Route path=\"/stage/:stagenumber\" component={Stage} history={this.props.history} />\r\n          <Route path=\"/teamselection\" component={Teamselection} history={this.props.history} />\r\n          <Route path=\"/admin\" component={Admin} history={this.props.history} />\r\n          <Route path=\"/etappewinsten\" component={Etappewinsten} history={this.props.history} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { Router } from 'react-router-dom';\r\nimport \"./index.css\";\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport createHistory from 'history/createBrowserHistory';\r\nconst history = createHistory();\r\n\r\nReactDOM.render(\r\n  (\r\n    <Router history={history}>\r\n      <App history={history}/>\r\n    </Router>\r\n  ),\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();"],"sourceRoot":""}